<?php

namespace {{ namespace }};

use Illuminate\Database\Eloquent\Model;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Roghumi\Press\Crud\Services\CrudService\Verbs\Create\ICreateVerbComposite;

/**
 * {{ resource }} creation base composite class.
 */
class CreateComposite implements ICreateVerbComposite
{
    /**
     * Rules for {{ resource }} creation
     *
     * @param  Request  $request incoming request
     * @param  array  $compositeRules Rules from other registered relevant compositions.
     * @param  mixed  ...$args route args
     */
    public function getRules(Request $request, array $compositeRules, ...$args): array
    {
        return array_merge($compositeRules, [
            {% for cl in columns %}
            {% if not cl.input is same as false %}
            '{{ cl.name }}' => '{{ cl.rules }}',
            {% endif %}
            {% endfor %}
        ]);
    }

    /**
     * Sanitized data from request for eloquent model
     *
     * @param  Request  $request incoming request
     * @param  array  $data Data from other registered relevant compositions.
     * @param  mixed  ...$args route args
     */
    public function getSanitized(Request $request, array $data, ...$args): array
    {
        return array_merge($data, [
        ]);
    }

    /**
     * Before domain creation
     *
     * @param  Request  $request incoming request
     * @param  Model  $resource model that will be created
     * @param  mixed  ...$args incoming route args
     *
     * @throws Exception
     */
    public function onBeforeCreate(Request $request, Model $resource, ...$args): void
    {
    }

    /**
     * After domain created:
     *  * update domain position in hierarchy based on request parentId parameter
     *
     * @param  Request  $request incoming request
     * @param  Model  $resource newly created model
     * @param  mixed  ...$args incoming route args
     *
     * @throws Exception
     */
    public function onAfterCreate(Request $request, Model $resource, ...$args): void
    {
    }
}
