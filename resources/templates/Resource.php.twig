<?php

namespace {{ namespace }};

{% if factory %}
use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Database\Eloquent\Factories\HasFactory;
{% if not factory is same as false and factory.namespace %}
use {{ factory.namespace }}\{{ resource | ucFirst }}Factory;
{% endif %}
{% endif %}

{% if softDeletes %}
use Illuminate\Database\Eloquent\SoftDeletes;
{% endif %}

use Illuminate\Database\Eloquent\Model;
{{ relationsUsedClasses(relations) }}
use Roghumi\Press\Crud\Services\AccessService\IUser;
use Roghumi\Press\Crud\Services\CrudService\ICrudResource;

/**
 * {{ resource | ucFirst }} Model
 * {{ doc }}
{% if timestamps %}
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
{% endif %}
{% if softDeletes %}
 * @property \Carbon\Carbon|null $deleted_at
{% endif %}
{% for prop in columns %}
 * @property {{ prop['type'] }} ${{ prop['name'] }}
{% endfor %}
 */
class {{ resource }} extends Model implements ICrudResource
{
{% if factory %}
    use HasFactory;
{% endif %}
{% if softDeletes %}
    use SoftDeletes;
{% endif %}

    protected $fillable = [
{% for link in columns %}
{% if not link.input is same as false %}
        '{{ link.name }}'
{% endif %}
{% endfor %}
    ];

{% if factory %}
    protected static function newFactory(): Factory
    {
        return {{ resource | ucFirst }}Factory::new();
    }
{% endif %}

    /**
     * get eloquent object for this resource item
     */
    public function getModel(): Model
    {
        return $this;
    }

    {% for relation in relations %}
    /**
    * {{ relation.name | ucFirst }} relation.
    * {{ relation.doc }}
    * @return {{ relation.type | ucFirst }}
    */
    public function {{ relation.name | camelCase }}()
    {
        return $this->{{ relation.type | camelCase }}({{ relation.class | relationClass | raw }}, ...{{ relation.props | json_encode | raw }});
    }
    {% endfor %}
}
